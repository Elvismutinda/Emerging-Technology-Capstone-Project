services:
  nginx:
    depends_on:
      - frontend
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - '8080:80'
    networks:
      - app-network
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # ports:
    #   - '3000:3000'
    volumes:
      - /app/node_modules
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  # api:
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:password@db:5432/mydatabase
  #   expose:
  #     - "4000"
  #   networks:
  #     - app-network
  #   depends_on:
  #     - db
  
  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: mydatabase
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

# volumes:
#   db_data: